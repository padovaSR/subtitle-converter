#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 1.1.0pre
# Modified by padovaSR

import os
import re
import logging.config
import wx

logger = logging.getLogger(__name__)

def listFiles(folderIn):
    """"""
    subs_list = []
    vids_list = []
    c = 0
    with os.scandir(folderIn) as it:
        for entry in it:
            if not entry.name.startswith('.') and entry.is_file():
                if entry.name.lower().endswith((".srt", ".sub", ".txt")):
                    c += 1
                    subs_list.append(f"{c} • {entry.name}")
                if entry.name.lower().endswith((".mp4", ".mkv", ".avi")):
                    vids_list.append(entry.name)
    return subs_list, vids_list

class FilesRename(wx.Dialog):
    def __init__(self, parent, id=wx.ID_ANY):
        wx.Dialog.__init__(
            self,
            parent,
            style=wx.DEFAULT_DIALOG_STYLE
            | wx.MAXIMIZE_BOX
            | wx.MINIMIZE_BOX
            | wx.RESIZE_BORDER,
        )
        self.SetSize((695, 604))
        self.SetTitle("Rename Utility")
        _icon = wx.NullIcon
        _icon.CopyFromBitmap(
            wx.Bitmap(
                os.path.join("resources", "icons", "icon_d.png"), wx.BITMAP_TYPE_ANY
            )
        )
        self.SetIcon(_icon)
        self.SetFocus()

        self.sizer_1 = wx.BoxSizer(wx.VERTICAL)
        self.textFont = wx.Font(
            10,
            wx.FONTFAMILY_SWISS,
            wx.FONTSTYLE_NORMAL,
            wx.FONTWEIGHT_NORMAL,
            0,
            "Franklin Gothic Medium",
        )

        self.panel_1 = wx.Panel(self, wx.ID_ANY)
        self.sizer_1.Add(self.panel_1, 1, wx.EXPAND, 0)

        self.sizer_2 = wx.BoxSizer(wx.VERTICAL)

        self.label_1 = wx.StaticText(
            self.panel_1, wx.ID_ANY, "Izaberi folder", style=wx.ALIGN_LEFT
        )
        self.label_1.SetFont(
            wx.Font(
                9,
                wx.FONTFAMILY_SWISS,
                wx.FONTSTYLE_NORMAL,
                wx.FONTWEIGHT_NORMAL,
                0,
                "Franklin Gothic Medium",
            )
        )
        self.sizer_2.Add(self.label_1, 0, wx.EXPAND | wx.LEFT | wx.TOP, 3)

        self.dirPicker1 = wx.DirPickerCtrl(
            self.panel_1,
            wx.ID_ANY,
            wx.EmptyString,
            "Select a folder",
            wx.DefaultPosition,
            wx.DefaultSize,
            wx.DIRP_DEFAULT_STYLE | wx.DIRP_USE_TEXTCTRL,
        )
        self.dirPicker1.SetFocus()
        self.sizer_2.Add(self.dirPicker1, 0, wx.ALL | wx.EXPAND, 4)

        self.window_1 = wx.SplitterWindow(
            self.panel_1, wx.ID_ANY, style=wx.SP_3D | wx.SP_LIVE_UPDATE
        )
        self.window_1.SetMinimumPaneSize(20)
        self.sizer_2.Add(self.window_1, 1, wx.ALL | wx.EXPAND, 3)

        self.text_1 = wx.TextCtrl(
            self.window_1,
            wx.ID_ANY,
            "",
            style=wx.TE_DONTWRAP | wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_RICH,
        )
        self.text_1.SetFont(self.textFont)
        self.text_1.SetToolTip("Originalni\nfajlovi")

        self.text_2 = wx.TextCtrl(
            self.window_1,
            wx.ID_ANY,
            "",
            style=wx.TE_DONTWRAP | wx.TE_MULTILINE | wx.TE_RICH,
        )
        self.text_2.SetFont(self.textFont)
        self.text_2.SetToolTip("Preimenovani\nfajlovi")
        self.text_2.SetFocus()

        self.sizer_3 = wx.StdDialogButtonSizer()
        self.sizer_1.Add(self.sizer_3, 0, wx.ALIGN_RIGHT | wx.BOTTOM, 4)

        self.button_OK = wx.Button(self, wx.ID_OK, "")
        self.button_OK.SetDefault()
        self.sizer_3.AddButton(self.button_OK)

        self.button_CANCEL = wx.Button(self, wx.ID_CANCEL, "")
        self.sizer_3.AddButton(self.button_CANCEL)

        self.sizer_3.Realize()

        self.window_1.SplitVertically(self.text_1, self.text_2)

        self.panel_1.SetSizer(self.sizer_2)

        self.SetSizer(self.sizer_1)

        self.SetAffirmativeId(self.button_OK.GetId())
        self.SetEscapeId(self.button_CANCEL.GetId())

        self.Layout()

        self.Bind(wx.EVT_TEXT, self.textChanged, self.text_2)
        # self.Bind(wx.EVT_DIRPICKER_CHANGED, self.getNames, self.text_1)
        self.dirPicker1.Bind(wx.EVT_DIRPICKER_CHANGED, self.getNames)

    def getNames(self, event):
        sourcePath = event.GetPath()
        fl,vl = listFiles(sourcePath)
        try:
            for i in fl:
                # i = i.lstrip("1234567890 •")
                self.text_1.AppendText(f"{i}\n")
            for i in vl:
                self.text_2.AppendText(f"{i}\n")
        except Exception as e:
            logger.debug(f"Error: {e}")
        event.Skip()

    def textChanged(self, event):

        event.Skip()


class MyApp(wx.App):
    def OnInit(self):
        self.dialog = FilesRename(None, wx.ID_ANY)
        self.SetTopWindow(self.dialog)
        self.dialog.ShowModal()
        self.dialog.Destroy()
        return True

if __name__ == "__main__":
    app = MyApp(0)
    app.MainLoop()
